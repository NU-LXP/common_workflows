name: build and push docker image to registry

on:
  workflow_call:
    inputs:
      docker_registry:
        description: 'The docker registry to use for docker login'
        required: false
        default: 'ghcr.io'
        type: string
      docker_file_location:
        description: 'The docker file location'
        default: './Dockerfile'
        required: false
        type: string
      docker_user:
        description: 'The docker user to login'
        required: true
        type: string
      docker_image_name:
        description: 'The docker image name to build'
        required: true
        type: string
    secrets:
      docker_password:
        description: 'The docker password for login'
        required: true



jobs:
  docker_release:
    name: docker release job
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.docker_password }}    
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ inputs.docker_registry }} 
          username: ${{ inputs.docker_user }} 
          password: ${{ secrets.docker_password }} 

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ inputs.docker_registry }}/${{ inputs.docker_image_name }}
          flavor: |
            latest=auto
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=match,pattern=\d.\d.\d
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file:  ${{ inputs.docker_file_location }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            github_user=${{ inputs.docker_user }} 
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.docker_password }}
